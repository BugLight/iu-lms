load("@io_bazel_rules_docker//python3:image.bzl", "py3_image")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@third_party//:requirements.bzl", "requirement")

py_library(
    name = "gateway",
    srcs_version = "PY3",
    srcs = [
        "__init__.py",
        "app.py",
        "settings.py",
        "dependencies/__init__.py",
        "dependencies/cache.py",
        "dependencies/courses.py",
        "dependencies/page_flags.py",
        "dependencies/s3.py",
        "dependencies/sessions.py",
        "dependencies/tasks.py",
        "dependencies/auth.py",
        "routers/__init__.py",
        "routers/courses.py",
        "routers/reports.py",
        "routers/tasks.py",
        "routers/users.py",
        "schemas/__init__.py",
        "schemas/assignment.py",
        "schemas/attempt.py",
        "schemas/course.py",
        "schemas/page.py",
        "schemas/review.py",
        "schemas/task.py",
        "schemas/user.py",
        "schemas/reports/__init__.py",
        "schemas/reports/academic_performance.py",
    ],
    deps = [
        requirement("fastapi"),
        requirement("uvicorn"),
        requirement("python-multipart"),
        requirement("pyjwt"),
        requirement("email-validator"),
        requirement("python-dotenv"),
        requirement("cachetools"),
        requirement("boto3"),
        "//sessions/proto:sessions_py_grpc",
        "//courses/proto:courses_py_grpc",
        "//tasks/proto:tasks_py_grpc",
    ],
)

py_binary(
    name = "bin",
    srcs_version = "PY3",
    main = "run.py",
    srcs = [
        "run.py",
    ],
    deps = [
        ":gateway",
    ],
    data = glob([".env"]),
)

py3_image(
    name = "image",
    main = "run.py",
    srcs = [
        "run.py",
    ],
    deps = [
        ":gateway",
    ],
    base = "//:py3_base_image",
)

k8s_deploy(
    name = "deployment",
    kind = "deployment",
    template = "k8s/deployment.yaml",
    images = {
        "cr.yandex/crpte7n56g4f5meeem22/iu-lms/gateway": ":image",
    },
)

k8s_deploy(
    name = "service",
    kind = "service",
    template = "k8s/service.yaml",
)

k8s_objects(
    name = "production",
    objects = [
        ":deployment",
        ":service"
    ],
)
