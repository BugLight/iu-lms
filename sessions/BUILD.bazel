load("@io_bazel_rules_docker//python3:image.bzl", "py3_image")
load("@io_bazel_rules_k8s//k8s:objects.bzl", "k8s_objects")
load("@k8s_deploy//:defaults.bzl", "k8s_deploy")
load("@rules_python//python:defs.bzl", "py_binary", "py_library")
load("@third_party//:requirements.bzl", "requirement")

py_library(
    name = "sessions",
    srcs_version = "PY3",
    srcs = [
        "__init__.py",
        "db.py",
        "mail.py",
        "password.py",
        "service.py",
        "settings.py",
        "models/__init__.py",
        "models/user.py",
    ],
    deps = [
        requirement("grpcio"),
        requirement("pydantic"),
        requirement("SQLAlchemy"),
        requirement("psycopg2-binary"),
        "//sessions/proto:sessions_py_pb2",
        "//sessions/proto:sessions_py_pb2_grpc",
    ]
)

py_binary(
    name = "bin",
    main = "run.py",
    srcs = [
        "run.py",
    ],
    deps = [
        ":sessions",
        requirement("grpcio-health-checking"),
    ],
)

py3_image(
    name = "image",
    main = "run.py",
    srcs = [
        "run.py",
    ],
    deps = [
        ":sessions",
        requirement("grpcio-health-checking"),
    ],
    base = "//:py3_base_image",
)

k8s_deploy(
    name = "deployment",
    kind = "deployment",
    template = "k8s/sessions.deployment.yaml",
    images = {
        "cr.yandex/crpte7n56g4f5meeem22/iu-lms/sessions": ":image",
    },
)

k8s_deploy(
    name = "service",
    kind = "service",
    template = "k8s/sessions.service.yaml",
)

k8s_deploy(
    name = "db",
    kind = "statefulset",
    template = "k8s/db.statefulset.yaml",
)

k8s_deploy(
    name = "db_service",
    kind = "service",
    template = "k8s/db.service.yaml",
)

k8s_objects(
    name = "production",
    objects = [
        ":deployment",
        ":service",
        ":db",
        ":db_service",
    ],
)
